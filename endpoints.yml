# This file contains the different endpoints your bot can use.

# Endpoint for the REST webhook to interact with the bot.
rest:
  url: "http://localhost:5005/webhooks/rest/webhook"

# If you have custom actions, make sure to specify the action endpoint:
action_endpoint:
  url: "http://localhost:5055/webhook"

# You can also configure a tracker store (e.g., Redis, MongoDB) or event brokers if needed:
#tracker_store:
#    type: redis
#    url: localhost
#    port: 6379
#    db: 0
#    password: "your_password"
#    use_ssl: false

# Event broker configuration (if you use one)
#event_broker:
#  url: localhost
#  username: username
#  password: password
#  queue: queue


# Server where the models are pulled from.
# https://rasa.com/docs/rasa/model-storage#fetching-models-from-a-server

#models:
#  url: http://my-server.com/models/default_core@latest
#  wait_time_between_pulls:  10   # [optional](default: 100)

# Server which runs your custom actions.
# https://rasa.com/docs/rasa/custom-actions

#action_endpoint:
#  url: "http://localhost:5055/webhook"

# By default the conversations are stored in memory.
# https://rasa.com/docs/rasa/tracker-stores

#tracker_store:
#    type: redis
#    url: <host of the redis instance, e.g. localhost>
#    port: <port of your redis instance, usually 6379>
#    db: <number of your database within redis, e.g. 0>
#    password: <password used for authentication>
#    use_ssl: <whether or not the communication is encrypted, default false>

#tracker_store:
#    type: mongod
#    url: <url to your mongo instance, e.g. mongodb://localhost:27017>
#    db: <name of the db within your mongo instance, e.g. rasa>
#    username: <username used for authentication>
#    password: <password used for authentication>

# Event broker which all conversation events should be streamed to.
# https://rasa.com/docs/rasa/event-brokers

#event_broker:
#  url: localhost
#  username: username
#  password: password
#  queue: queue
